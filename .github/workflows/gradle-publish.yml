# 使用Gradle发布Java包
# 使用Gradle构建Java包并发布到GitHub包。
# 此工作流将使用Gradle构建包，然后在创建发布时将其发布到GitHub包
# 有关更多信息，请参阅： https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [ created ]
# job(任务)：一个 workflow 由一个或者多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # step(步骤)：每个 job 由多个 step 构成，一步步完成。
      # action(动作)：每个 step 可以依次执行一个或者多个命令。
    steps:
      # 设置特定版本的Java JDK，并将命令行工具添加到PATH
      - name: Setup Java JDK
        uses: actions/setup-java@v3.11.0
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: '11' # optional
          # The path to the `.java-version` file. See examples of supported syntax in README file
          # java-version-file: # optional
          # Java distribution. See the list of supported distributions in README file
          distribution: 'temurin'
          # The package type (jdk, jre, jdk+fx, jre+fx)
          # java-package: # optional, default is jdk
          # The architecture of the package (defaults to the action runner's architecture)
          # architecture: # optional
          # Path to where the compressed JDK is located
          # jdkFile: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          # check-latest: # optional
          # ID of the distributionManagement repository in the pom.xml file. Default is `github`
          server-id: github # optional, default is github
          # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
          # server-username: # optional, default is GITHUB_ACTOR
          # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
          # server-password: # optional, default is GITHUB_TOKEN
          # Path to where the settings.xml file will be written. Default is ~/.m2.
          settings-path: ${{ github.workspace }} # optional
          # Overwrite the settings.xml file if it exists. Default is "true".
          # overwrite-settings: # optional, default is true
          # GPG private key to import. Default is empty string.
          # gpg-private-key: # optional
          # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
          # gpg-passphrase: # optional
          # Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".
          # cache: # optional
          # Workaround to pass job status to post job step. This variable is not intended for manual setting
          # job-status: # optional, default is ${{ job.status }}
          # The token used to authenticate when fetching version manifests hosted on github.com, such as for the Microsoft Build of OpenJDK. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
          # token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
          # Name of Maven Toolchain ID if the default name of "${distribution}_${java-version}" is not wanted. See examples of supported syntax in Advanced Usage file
          #mvn-toolchain-id: # optional
          # Name of Maven Toolchain Vendor if the default name of "${distribution}" is not wanted. See examples of supported syntax in Advanced Usage file
          # mvn-toolchain-vendor: # optional
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
